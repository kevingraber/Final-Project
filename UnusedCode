old create user...

render() {
        return (
            <View style={styles.container}>
                <ScrollView style={{width: Dimensions.get('window').width}}>
                    <Text style={styles.welcome}>
                        Create Account
                    </Text>
                    <TextInput
                        style={{width: 300}}
                        placeholder="Username"
                        onChangeText={(username) => this.setState({username})}
                        value={this.state.username}
                    />
                    <Text>{this.state.username}</Text>
                    <TextInput
                        secureTextEntry={true}
                        style={{width: 300}}
                        placeholder="Password"
                        onChangeText={(password) => this.setState({password})}
                        value={this.state.password}
                    />
                    <Text>{this.state.password}</Text>
                    <TextInput
                        secureTextEntry={true}
                        style={{width: 300}}
                        placeholder="Confirm Password"
                        onChangeText={(confirmpassword) => this.setState({confirmpassword})}
                        value={this.state.confirmpassword}
                    />
                    <Text>{this.state.confirmpassword}</Text>
                    <TextInput
                        style={{width: 300}}
                        placeholder="Email"
                        onChangeText={(email) => this.setState({email})}
                        value={this.state.email}
                    />
                    <Text>{this.state.email}</Text>
                    <TextInput
                        style={{width: 300}}
                        placeholder="Picture"
                        onChangeText={(picture) => this.setState({picture})}
                        value={this.state.picture}
                    />
                    <Text>{this.state.picture}</Text>
                    <TextInput
                        style={{width: 300}}
                        placeholder="Age"
                        onChangeText={(age) => this.setState({age})}
                        value={this.state.age}
                    />
                    <Text>{this.state.bio}</Text>
                    <TextInput
                        style={{width: 300}}
                        placeholder="Age"
                        onChangeText={(age) => this.setState({age})}
                        value={this.state.age}
                    />
                    <Text>{this.state.age}</Text>
                    <TextInput
                        style={{width: 300}}
                        placeholder="Home Zip"
                        onChangeText={(homezip) => this.setState({homezip})}
                        value={this.state.homezip}
                    />
                    <Text>{this.state.homezip}</Text>
                    <TextInput
                        style={{width: 300}}
                        placeholder="Work Zip"
                        onChangeText={(workzip) => this.setState({workzip})}
                        value={this.state.workzip}
                    />
                    <Text>{this.state.workzip}</Text>
                </ScrollView>
                <TouchableNativeFeedback onPress={this.buttonClicked.bind(this)} >
                    <View style={{width: 200, height: 50, backgroundColor: 'lightblue'}}>
                        <Text>Submit</Text>
                    </View>
                </TouchableNativeFeedback>
            </View>
        );
    }

same password check (didn't work) ...

var signupButton;

if (this.state.password === this.state.passwordconfirm) {
    signupButton = <SignUpButton />;
} else {
    signupButton = <SignUpPassDontMatch />;
}

old login functionality that isn't used anymore ...
 //   login() {
  //   fetch('http://10.0.3.2:3001/sessions/create', {
  //     method: 'POST',
  //     headers: {
  //       'Accept': 'application/json',
  //       'Content-Type': 'application/json'
  //     },
  //     body: JSON.stringify({
  //       username: this.state.username,
  //       password: this.state.password,
  //     })
  //   })
  //   .then((response) => response.json())
  //   .then((responseData) => {
  //     Alert.alert('You JWT is:', responseData.id_token)
  //     this._onValueChange(STORAGE_KEY, responseData.id_token)
  //     console.log(responseData)
  //   })
  //   .done()
  //   // .then(Actions.welcome())
  // }

  // // login() {
  // //   fetch('http://10.0.3.2:3001/sessions/create', {
  // //     method: 'POST',
  // //     headers: {
  // //       'Accept': 'application/json',
  // //       'Content-Type': 'application/json'
  // //     },
  // //     body: JSON.stringify({
  // //       username: this.state.username,
  // //       password: this.state.password,
  // //     })
  // //   })
  // //   .then((response) => {
  // //     console.log(response)
  // //   })
  // //   .then((responseData) => {
  // //     console.log(responseData)
  // //   })
  // //   .done()